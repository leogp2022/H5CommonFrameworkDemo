{
  "ver": "1.0.25",
  "uuid": "9c151c2d-1634-4ebd-9941-155103425233",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\n#extension GL_OES_standard_derivatives: enable\nprecision highp float;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform vec4 ucolor;\nvoid main( void )\n{\n  vec2 st = v_uv0.xy;\n  float alpha = texture2D(texture, st).a;\n  float D = 16.0 * (alpha - 0.5);\n  float aastep = fwidth(D);\n  aastep = max(aastep, 1e-8);\n  float edge = 0.;\n  float mask = smoothstep(edge - aastep, edge + aastep, D);\n  gl_FragColor = vec4(vec3(ucolor), mask * ucolor.a);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\n#extension GL_OES_standard_derivatives: enable\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform Constanc {\n  vec4 ucolor;\n  float ubold;\n};\nvoid main( void )\n{\n  vec2 st = v_uv0.xy;\n  float alpha = texture2D(texture, st).a;\n  float D = 16.0 * (alpha - 0.5);\n  float aastep = fwidth(D);\n  aastep = max(aastep, 1e-8);\n  float edge = 0.;\n  float mask = smoothstep(edge - aastep, edge + aastep, D);\n  gl_FragColor = vec4(vec3(ucolor), mask * ucolor.a);\n}"
      }
    }
  ],
  "subMetas": {}
}