// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - name: pass1
      vert: pass1-vs::vs
      frag: pass1-fs::fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        _Offset: { value: [30.0, 30.0]}
    - name: pass2
      vert: pass2-vs::vs
      frag: pass2-fs::fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
}%


CCProgram pass1-vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  uniform OutlineFrag {
    vec2 _Offset;
  };

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos.x += _Offset.x;
    pos.y += _Offset.y;
    pos = cc_matViewProj * cc_matWorld * pos;
    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram pass1-fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);
    CCTexture(texture, v_uv0, o);
    o *= v_color;
    if(o.w >= 0.5) {
        o.r = 0.0;
        o.g = 0.0;
        o.b = 0.0;
        o.w = 0.5;
    }
    gl_FragColor = o;
  }
}%

CCProgram pass2-vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * cc_matWorld * pos;
    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram pass2-fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);
    CCTexture(texture, v_uv0, o);
    o *= v_color;
    gl_FragColor = o;
  }
}%
